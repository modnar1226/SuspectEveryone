generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                    Int                     @id @default(autoincrement())
  org_id                Int
  name                  String
  primary_contact_id    Int
  primary_email         String
  primary_phone         String
  street_address        String
  city                  String
  state                 String
  zip                   String
  created_at            DateTime?
  updated_at            DateTime?
  orgs                  orgs                    @relation(fields: [org_id], references: [id])
  contacts              contacts                @relation(fields: [primary_contact_id], references: [id])
  account_custom_values account_custom_values[]

  @@index([org_id], name: "accounts_org_id_foreign")
  @@index([primary_contact_id], name: "accounts_primary_contact_id_foreign")
}

model account_custom_fields {
  id                    Int                     @id @default(autoincrement())
  org_id                Int
  tag                   String
  type                  String?
  label                 String
  placeholder           String?
  field_name            String
  min                   String?
  max                   String?
  required              Boolean
  options               Json?
  created_at            DateTime?
  updated_at            DateTime?
  orgs                  orgs                    @relation(fields: [org_id], references: [id])
  account_custom_values account_custom_values[]

  @@index([org_id], name: "account_custom_fields_org_id_foreign")
}

model account_custom_values {
  id                      Int                   @id @default(autoincrement())
  account_custom_field_id Int
  account_id              Int
  value                   String
  created_at              DateTime?
  updated_at              DateTime?
  account_custom_fields   account_custom_fields @relation(fields: [account_custom_field_id], references: [id])
  accounts                accounts              @relation(fields: [account_id], references: [id])

  @@index([account_custom_field_id], name: "account_custom_values_account_custom_field_id_foreign")
  @@index([account_id], name: "account_custom_values_account_id_foreign")
}

model admins {
  id             Int       @id @default(autoincrement())
  first          String
  last           String
  email          String    @unique
  password       String
  address        String
  city           String
  state          String
  zip            String
  is_super       Boolean   @default(false)
  remember_token String?
  created_at     DateTime?
  updated_at     DateTime?
}

model contacts {
  id                    Int                     @id @default(autoincrement())
  org_id                Int
  first                 String
  middle                String?
  last                  String
  email                 String?
  phone                 String?
  street_address        String?
  city                  String?
  state                 String
  zip                   String?
  created_at            DateTime?
  updated_at            DateTime?
  orgs                  orgs                    @relation(fields: [org_id], references: [id])
  accounts              accounts[]
  contact_custom_values contact_custom_values[]
  users                 users[]

  @@index([org_id], name: "contacts_org_id_foreign")
}

model contact_custom_fields {
  id                    Int                     @id @default(autoincrement())
  org_id                Int
  tag                   String
  type                  String?
  label                 String
  placeholder           String?
  field_name            String
  min                   String?
  max                   String?
  required              Boolean
  options               Json?
  created_at            DateTime?
  updated_at            DateTime?
  orgs                  orgs                    @relation(fields: [org_id], references: [id])
  contact_custom_values contact_custom_values[]

  @@index([org_id], name: "contact_custom_fields_org_id_foreign")
}

model contact_custom_values {
  id                      Int                   @id @default(autoincrement())
  contact_custom_field_id Int
  contact_id              Int
  org_id                  Int
  value                   String
  created_at              DateTime?
  updated_at              DateTime?
  contact_custom_fields   contact_custom_fields @relation(fields: [contact_custom_field_id], references: [id])
  contacts                contacts              @relation(fields: [contact_id], references: [id])
  orgs                    orgs                  @relation(fields: [org_id], references: [id])

  @@index([contact_custom_field_id], name: "contact_custom_values_contact_custom_field_id_foreign")
  @@index([contact_id], name: "contact_custom_values_contact_id_foreign")
  @@index([org_id], name: "contact_custom_values_org_id_foreign")
}

model jobs {
  id           Int    @id @default(autoincrement())
  queue        String
  payload      String
  attempts     Int
  reserved_at  Int?
  available_at Int
  created_at   Int

  @@index([queue], name: "jobs_queue_index")
}

model migrations {
  id        Int    @id @default(autoincrement())
  migration String
  batch     Int
}

model orgs {
  id                    Int                     @id @default(autoincrement())
  name                  String
  primary_email         String
  phone                 String
  created_at            DateTime?
  updated_at            DateTime?
  accounts              accounts[]
  account_custom_fields account_custom_fields[]
  contacts              contacts[]
  contact_custom_fields contact_custom_fields[]
  contact_custom_values contact_custom_values[]
}

model users {
  id                Int        @id @default(autoincrement())
  contact_id        Int
  org_id            Int
  email             String     @unique
  role              users_role @default(guest)
  email_verified_at DateTime?
  password          String
  remember_token    String?
  created_at        DateTime?
  updated_at        DateTime?
  contacts          contacts   @relation(fields: [contact_id], references: [id])

  @@index([contact_id], name: "users_contact_id_foreign")
}

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled.
// model password_resets {
  // email      String
  // token      String
  // created_at DateTime?

  // @@index([email], name: "password_resets_email_index")
// }

enum users_role {
  guest
  user
  manager
  admin
  sys_admin
}
